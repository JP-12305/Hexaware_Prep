{"ast":null,"code":"var _jsxFileName = \"D:\\\\FSD\\\\my-auth-app\\\\src\\\\App.js\";\n// src/App.js\n\nimport React from 'react';\nimport './App.css';\nimport LoginForm from './components/LoginForm';\nimport SignupForm from './SignupForm';\nimport AdminDashboard from './AdminDashboard';\n\n// A simple router component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const path = window.location.pathname;\n  if (path === '/admin') {\n    return /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  // For now, we'll need a placeholder for the learner dashboard\n  if (path === '/dashboard') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"Learner Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Welcome, Learner! Your content is coming soon.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this);\n  }\n\n  // Default to login/signup page. We can use a query param to switch.\n  const isLoginView = !new URLSearchParams(window.location.search).has('signup');\n  const switchToSignup = () => window.location.href = '/?signup=true';\n  const switchToLogin = () => window.location.href = '/';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: isLoginView ? /*#__PURE__*/_jsxDEV(LoginForm, {\n        onSwitchToSignup: switchToSignup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(SignupForm, {\n        onSwitchToLogin: switchToLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","LoginForm","SignupForm","AdminDashboard","jsxDEV","_jsxDEV","App","path","window","location","pathname","fileName","_jsxFileName","lineNumber","columnNumber","className","children","isLoginView","URLSearchParams","search","has","switchToSignup","href","switchToLogin","onSwitchToSignup","onSwitchToLogin","_c","$RefreshReg$"],"sources":["D:/FSD/my-auth-app/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React from 'react';\nimport './App.css';\nimport LoginForm from './components/LoginForm';\nimport SignupForm from './SignupForm';\nimport AdminDashboard from './AdminDashboard';\n\n// A simple router component\nconst App = () => {\n  const path = window.location.pathname;\n\n  if (path === '/admin') {\n    return <AdminDashboard />;\n  }\n  \n  // For now, we'll need a placeholder for the learner dashboard\n  if (path === '/dashboard') {\n      return (\n          <div className=\"app-background\">\n              <div className=\"card\">\n                  <h1 className=\"title\">Learner Dashboard</h1>\n                  <p>Welcome, Learner! Your content is coming soon.</p>\n              </div>\n          </div>\n      );\n  }\n\n  // Default to login/signup page. We can use a query param to switch.\n  const isLoginView = !new URLSearchParams(window.location.search).has('signup');\n\n  const switchToSignup = () => window.location.href = '/?signup=true';\n  const switchToLogin = () => window.location.href = '/';\n\n  return (\n    <div className=\"app-background\">\n      <div className=\"card\">\n        {isLoginView ? (\n          <LoginForm onSwitchToSignup={switchToSignup} />\n        ) : (\n          <SignupForm onSwitchToLogin={switchToLogin} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,cAAc,MAAM,kBAAkB;;AAE7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAMC,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ;EAErC,IAAIH,IAAI,KAAK,QAAQ,EAAE;IACrB,oBAAOF,OAAA,CAACF,cAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3B;;EAEA;EACA,IAAIP,IAAI,KAAK,YAAY,EAAE;IACvB,oBACIF,OAAA;MAAKU,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC3BX,OAAA;QAAKU,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACjBX,OAAA;UAAIU,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAC;QAAiB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5CT,OAAA;UAAAW,QAAA,EAAG;QAA8C;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd;;EAEA;EACA,MAAMG,WAAW,GAAG,CAAC,IAAIC,eAAe,CAACV,MAAM,CAACC,QAAQ,CAACU,MAAM,CAAC,CAACC,GAAG,CAAC,QAAQ,CAAC;EAE9E,MAAMC,cAAc,GAAGA,CAAA,KAAMb,MAAM,CAACC,QAAQ,CAACa,IAAI,GAAG,eAAe;EACnE,MAAMC,aAAa,GAAGA,CAAA,KAAMf,MAAM,CAACC,QAAQ,CAACa,IAAI,GAAG,GAAG;EAEtD,oBACEjB,OAAA;IAAKU,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BX,OAAA;MAAKU,SAAS,EAAC,MAAM;MAAAC,QAAA,EAClBC,WAAW,gBACVZ,OAAA,CAACJ,SAAS;QAACuB,gBAAgB,EAAEH;MAAe;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE/CT,OAAA,CAACH,UAAU;QAACuB,eAAe,EAAEF;MAAc;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC9C;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACY,EAAA,GApCIpB,GAAG;AAsCT,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}